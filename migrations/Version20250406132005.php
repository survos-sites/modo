<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20250406132005 extends AbstractMigration
{
    public function getDescription(): string
    {
        return '';
    }

    public function up(Schema $schema): void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->addSql(<<<'SQL'
            CREATE TABLE expo (code VARCHAR(32) NOT NULL, PRIMARY KEY(code))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE expo_translation (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, title VARCHAR(255) NOT NULL, content TEXT DEFAULT NULL, locale VARCHAR(5) NOT NULL, translatable_id VARCHAR(32) DEFAULT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_349B803F2C2AC5D3 ON expo_translation (translatable_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX expo_translation_unique_translation ON expo_translation (translatable_id, locale)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE loc (id INT NOT NULL, title JSONB NOT NULL, content JSONB NOT NULL, locale VARCHAR(2) NOT NULL, order_idx INT DEFAULT NULL, obj_count INT DEFAULT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE obj (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, label VARCHAR(255) NOT NULL, description TEXT DEFAULT NULL, code VARCHAR(255) NOT NULL, locale VARCHAR(2) NOT NULL, info TEXT DEFAULT NULL, location_id INT NOT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_4666D46C64D218E ON obj (location_id)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE "user" (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, username VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, email VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE UNIQUE INDEX UNIQ_IDENTIFIER_USERNAME ON "user" (username)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE TABLE messenger_messages (id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)
        SQL);
        $this->addSql(<<<'SQL'
            CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE expo_translation ADD CONSTRAINT FK_349B803F2C2AC5D3 FOREIGN KEY (translatable_id) REFERENCES expo (code) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE obj ADD CONSTRAINT FK_4666D46C64D218E FOREIGN KEY (location_id) REFERENCES loc (id) NOT DEFERRABLE INITIALLY IMMEDIATE
        SQL);
    }

    public function down(Schema $schema): void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql(<<<'SQL'
            ALTER TABLE expo_translation DROP CONSTRAINT FK_349B803F2C2AC5D3
        SQL);
        $this->addSql(<<<'SQL'
            ALTER TABLE obj DROP CONSTRAINT FK_4666D46C64D218E
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE expo
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE expo_translation
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE loc
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE obj
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE "user"
        SQL);
        $this->addSql(<<<'SQL'
            DROP TABLE messenger_messages
        SQL);
    }
}
